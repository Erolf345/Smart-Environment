[
    {
        "id": "7d7b30a8.5bc2b",
        "type": "tab",
        "label": "LED test flow",
        "disabled": true,
        "info": ""
    },
    {
        "id": "f9e6941.9f5df68",
        "type": "tab",
        "label": "Music Control",
        "disabled": true,
        "info": ""
    },
    {
        "id": "11ea8962.3c616f",
        "type": "tab",
        "label": "RCWL",
        "disabled": true,
        "info": ""
    },
    {
        "id": "e71c9d35.0449a",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": ""
    },
    {
        "id": "664289e.22d72f8",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "29c1db97.901354",
        "type": "tab",
        "label": "sync music",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a93faece.d7746",
        "type": "tab",
        "label": "LED-Camera",
        "disabled": true,
        "info": ""
    },
    {
        "id": "335a17ee.f1f5f8",
        "type": "tab",
        "label": "PositionTransform",
        "disabled": false,
        "info": ""
    },
    {
        "id": "169d6861.ad61d",
        "type": "tab",
        "label": "Dashboard config",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3f43a09.7e6556",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": ""
    },
    {
        "id": "df521596.125698",
        "type": "subflow",
        "name": "Persistence Helper",
        "info": "",
        "in": [
            {
                "x": 45.5,
                "y": 85,
                "wires": [
                    {
                        "id": "37028a91.0b1ffe"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 749.5,
                "y": 53,
                "wires": [
                    {
                        "id": "230dfeb6.8ba792",
                        "port": 0
                    }
                ]
            },
            {
                "x": 755,
                "y": 169,
                "wires": [
                    {
                        "id": "856afee0.348098",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "875a7078.91fde",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "b0d2fcdd.369d6",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "3aff5f59.0a6d88",
        "type": "ui_tab",
        "name": "Music Controls",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "ce52a348.41d78",
        "type": "ui_group",
        "name": "Output",
        "tab": "b0d2fcdd.369d6",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "5003631.3bc729c",
        "type": "ui_group",
        "name": "Default",
        "tab": "44904efc.96d75",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "44904efc.96d75",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 4
    },
    {
        "id": "5dedb706.b6d6a8",
        "type": "ui_group",
        "z": "335a17ee.f1f5f8",
        "name": "Default",
        "tab": "4a326350.5a3d6c",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "4a326350.5a3d6c",
        "type": "ui_tab",
        "z": "335a17ee.f1f5f8",
        "name": "Home",
        "icon": "dashboard",
        "order": 5
    },
    {
        "id": "ead80a27.d2327",
        "type": "ui_tab",
        "name": "Configuration",
        "icon": "font-awesome/fa-cog",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a29f7c61.ee366",
        "type": "ui_group",
        "name": "Startup Config",
        "tab": "ead80a27.d2327",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "740a99d2.b07d1",
        "type": "function",
        "z": "7d7b30a8.5bc2b",
        "name": "startBlink",
        "func": "var BLINKDELAY = 250;\n\nvar light = true;\n\n\nvar blinker = setInterval(blink, BLINKDELAY);\n\nglobal.set(\"blinker\", blinker);\n\nfunction blink () {\n    \n    if (light) {\n        msg.payload = 1;\n        light = false;\n    }\n    \n    else {\n        msg.payload = 0;\n        light = true;\n    }\n    \n    node.send(msg);\n}\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 200,
        "wires": [
            [
                "41b167bc.bbffc"
            ]
        ]
    },
    {
        "id": "73f5f278.0231bc",
        "type": "inject",
        "z": "7d7b30a8.5bc2b",
        "name": "pressme",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 204,
        "y": 200,
        "wires": [
            [
                "740a99d2.b07d1"
            ]
        ]
    },
    {
        "id": "41b167bc.bbffc",
        "type": "rpi-gpio out",
        "z": "7d7b30a8.5bc2b",
        "name": "Simple LED",
        "pin": "11",
        "set": false,
        "level": "0",
        "freq": "1000",
        "out": "pwm",
        "x": 570,
        "y": 360,
        "wires": []
    },
    {
        "id": "cc1b11b1.bebb28",
        "type": "function",
        "z": "7d7b30a8.5bc2b",
        "name": "stopBlink",
        "func": "clearInterval(global.get(\"blinker\"));\n\nmsg.payload = 0;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 260,
        "wires": [
            [
                "41b167bc.bbffc"
            ]
        ]
    },
    {
        "id": "5db82a6c.1b547c",
        "type": "inject",
        "z": "7d7b30a8.5bc2b",
        "name": "pressme",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 195,
        "y": 261,
        "wires": [
            [
                "cc1b11b1.bebb28"
            ]
        ]
    },
    {
        "id": "684e2449.974414",
        "type": "rpi-gpio in",
        "z": "7d7b30a8.5bc2b",
        "name": "PIR sensor",
        "pin": "36",
        "intype": "tri",
        "debounce": "25",
        "read": true,
        "x": 180,
        "y": 540,
        "wires": [
            [
                "f60b971f.d72818",
                "41b167bc.bbffc",
                "b12eb4c7.8746d",
                "edf9809c.5c166",
                "20d35e60.b0f65a"
            ]
        ]
    },
    {
        "id": "38a9dec0.2999f2",
        "type": "comment",
        "z": "7d7b30a8.5bc2b",
        "name": "LED control",
        "info": "",
        "x": 190,
        "y": 140,
        "wires": []
    },
    {
        "id": "f60b971f.d72818",
        "type": "debug",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 490,
        "y": 580,
        "wires": []
    },
    {
        "id": "c176f953.9e71b8",
        "type": "inject",
        "z": "7d7b30a8.5bc2b",
        "name": "on",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 190,
        "y": 340,
        "wires": [
            [
                "41b167bc.bbffc"
            ]
        ]
    },
    {
        "id": "97f7256a.4ea5e8",
        "type": "inject",
        "z": "7d7b30a8.5bc2b",
        "name": "off",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 190,
        "y": 380,
        "wires": [
            [
                "41b167bc.bbffc"
            ]
        ]
    },
    {
        "id": "82428d88.c2784",
        "type": "comment",
        "z": "7d7b30a8.5bc2b",
        "name": "PIR check",
        "info": "",
        "x": 180,
        "y": 460,
        "wires": []
    },
    {
        "id": "30e73299.7e539e",
        "type": "function",
        "z": "7d7b30a8.5bc2b",
        "name": "Invert and split",
        "func": "\nreturn [\n    //need to invert for LED (maybe not here)\n    {payload:255 - msg.payload.r},\n    {payload:255 - msg.payload.g},\n    {payload:255 - msg.payload.b}\n];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 820,
        "wires": [
            [
                "b06ef87a.2ecd18"
            ],
            [
                "3532ded.ea45f22"
            ],
            [
                "813aa6c7.4faa58"
            ]
        ]
    },
    {
        "id": "813aa6c7.4faa58",
        "type": "range",
        "z": "7d7b30a8.5bc2b",
        "minin": "0",
        "maxin": "255",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": true,
        "property": "payload",
        "name": "B",
        "x": 610,
        "y": 860,
        "wires": [
            [
                "3a344f73.a341b",
                "843e8dab.baebc"
            ]
        ]
    },
    {
        "id": "3532ded.ea45f22",
        "type": "range",
        "z": "7d7b30a8.5bc2b",
        "minin": "0",
        "maxin": "255",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": true,
        "property": "payload",
        "name": "G",
        "x": 610,
        "y": 820,
        "wires": [
            [
                "3bfc15b3.af5d12",
                "96ad2af9.ebb138"
            ]
        ]
    },
    {
        "id": "b06ef87a.2ecd18",
        "type": "range",
        "z": "7d7b30a8.5bc2b",
        "minin": "0",
        "maxin": "255",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": true,
        "property": "payload",
        "name": "R",
        "x": 610,
        "y": 780,
        "wires": [
            [
                "5f036011.4248c8",
                "43b79720.9de288"
            ]
        ]
    },
    {
        "id": "843e8dab.baebc",
        "type": "debug",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 870,
        "y": 920,
        "wires": []
    },
    {
        "id": "96ad2af9.ebb138",
        "type": "debug",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1030,
        "y": 820,
        "wires": []
    },
    {
        "id": "43b79720.9de288",
        "type": "debug",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 870,
        "y": 740,
        "wires": []
    },
    {
        "id": "3bfc15b3.af5d12",
        "type": "rpi-gpio out",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "pin": "19",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "pwm",
        "x": 860,
        "y": 820,
        "wires": []
    },
    {
        "id": "5f036011.4248c8",
        "type": "rpi-gpio out",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "pin": "21",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "pwm",
        "x": 860,
        "y": 780,
        "wires": []
    },
    {
        "id": "3a344f73.a341b",
        "type": "rpi-gpio out",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "pin": "23",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "pwm",
        "x": 860,
        "y": 860,
        "wires": []
    },
    {
        "id": "dcd87b79.2108e8",
        "type": "inject",
        "z": "7d7b30a8.5bc2b",
        "name": "on",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 450,
        "y": 720,
        "wires": [
            [
                "5f036011.4248c8",
                "3bfc15b3.af5d12",
                "3a344f73.a341b"
            ]
        ]
    },
    {
        "id": "c334952d.1e9208",
        "type": "inject",
        "z": "7d7b30a8.5bc2b",
        "name": "off",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "num",
        "x": 450,
        "y": 980,
        "wires": [
            [
                "5f036011.4248c8",
                "3bfc15b3.af5d12",
                "3a344f73.a341b"
            ]
        ]
    },
    {
        "id": "70e589e9.da3a",
        "type": "comment",
        "z": "7d7b30a8.5bc2b",
        "name": "RGB control",
        "info": "",
        "x": 90,
        "y": 640,
        "wires": []
    },
    {
        "id": "1e562453.9b452c",
        "type": "function",
        "z": "7d7b30a8.5bc2b",
        "name": "adjust to rbg led",
        "func": "let local_pir = msg.payload[\"pi/36\"]\nlet net = msg.payload[\"network\"]\n\nlet red=0\nlet green=0\nlet blue=0\n\n//compute rgb values\nif (local_pir == 1) {\n  if (net == 1){\n      red = 255;\n      green = 255;\n      blue = 255;\n  }\n  else {\n      red = 255\n  }\n}\nelse if (net==1){\n    blue = 255\n}\n\n\n//return RGB values\nreturn {payload: {r: red,b: blue, g:green}}\n\n\n//return {payload: (1 - local_pir)*100};\n//invert",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 660,
        "wires": [
            [
                "30e73299.7e539e"
            ]
        ]
    },
    {
        "id": "98176dee.b10b1",
        "type": "comment",
        "z": "7d7b30a8.5bc2b",
        "name": "Test",
        "info": "",
        "x": 770,
        "y": 460,
        "wires": []
    },
    {
        "id": "664573f7.d49c24",
        "type": "tcp in",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "server": "server",
        "host": "",
        "port": "55555",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "network",
        "base64": false,
        "x": 140,
        "y": 1120,
        "wires": [
            [
                "df2da042.662a1",
                "b12eb4c7.8746d"
            ]
        ]
    },
    {
        "id": "3906c54c.da9f22",
        "type": "comment",
        "z": "7d7b30a8.5bc2b",
        "name": "Listen on port",
        "info": "",
        "x": 130,
        "y": 1040,
        "wires": []
    },
    {
        "id": "df2da042.662a1",
        "type": "debug",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 380,
        "y": 1120,
        "wires": []
    },
    {
        "id": "20d35e60.b0f65a",
        "type": "tcp out",
        "z": "7d7b30a8.5bc2b",
        "host": "add IP",
        "port": "55555",
        "beserver": "client",
        "base64": false,
        "end": false,
        "name": "",
        "x": 390,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b12eb4c7.8746d",
        "type": "join",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 290,
        "y": 660,
        "wires": [
            [
                "1e562453.9b452c",
                "79344d4c.593544"
            ]
        ]
    },
    {
        "id": "79344d4c.593544",
        "type": "debug",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 730,
        "y": 580,
        "wires": []
    },
    {
        "id": "95f32362.be46b",
        "type": "inject",
        "z": "7d7b30a8.5bc2b",
        "name": "Get IPs",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 1480,
        "wires": [
            [
                "13b0ffe6.347ac"
            ]
        ]
    },
    {
        "id": "cfe97850.9c6638",
        "type": "exec",
        "z": "7d7b30a8.5bc2b",
        "command": "sudo batctl dc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 160,
        "y": 1600,
        "wires": [
            [
                "503aa18.be17e6"
            ],
            [],
            []
        ]
    },
    {
        "id": "503aa18.be17e6",
        "type": "function",
        "z": "7d7b30a8.5bc2b",
        "name": "Extract IPs from output",
        "func": "var ip_lines = msg.payload.split('\\n');\nip_lines.splice(0,3);\nip_lines.pop();\n\nvar ips= [];\nfor (i = 0; i < ip_lines.length; i++) {\n    var ip = ip_lines[i];\n    ip = ip.split('.');\n    if (ip.length != 4 ){ // sanity check\n        node.error(\"Input from batctl could not be parsed: \" + ip.join('.'));\n        continue\n    }\n    ip[0] = ip[0].replace(/\\D/g,''); // remove non digits from first element in array\n    ip[3] = ip[3].split(' ')[0]; // remove mac adress\n    ip = ip.join('.');\n    ips.push(ip);\n}\nmsg.ips = ips;\nmsg.topic = \"ip_addresses\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 1660,
        "wires": [
            [
                "1f336213.81595e"
            ]
        ]
    },
    {
        "id": "983d5af.c2a63a8",
        "type": "debug",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 150,
        "y": 1820,
        "wires": []
    },
    {
        "id": "edf9809c.5c166",
        "type": "join",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 350,
        "y": 1380,
        "wires": [
            [
                "4acef986.d22658"
            ]
        ]
    },
    {
        "id": "4acef986.d22658",
        "type": "function",
        "z": "7d7b30a8.5bc2b",
        "name": "Send to all IPs",
        "func": "let motion = msg.payload[\"pi/36\"];\nlet addresses = msg.payload[\"ip_addresses\"];\n\nfor (ip of addresses){\n    msg = {host: ip, payload: motion };\n    node.send(motion);\n}\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 1380,
        "wires": [
            [
                "d72e01c0.3db6c8"
            ]
        ]
    },
    {
        "id": "d72e01c0.3db6c8",
        "type": "tcp request",
        "z": "7d7b30a8.5bc2b",
        "server": "",
        "port": "55555",
        "out": "time",
        "splitc": "0",
        "name": "",
        "x": 700,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "13b0ffe6.347ac",
        "type": "exec",
        "z": "7d7b30a8.5bc2b",
        "command": "ping -c3 -b 169.254.255.255 && sleep 5",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Refresh batman table",
        "x": 180,
        "y": 1540,
        "wires": [
            [
                "cfe97850.9c6638"
            ],
            [],
            []
        ]
    },
    {
        "id": "1f336213.81595e",
        "type": "exec",
        "z": "7d7b30a8.5bc2b",
        "command": "ifconfig bat0 | grep -o \"inet [0-9]*\\.[0-9]*\\.[0-9]*\\.[0-9]*\" | grep -o \"[0-9]*\\.[0-9]*\\.[0-9]*\\.[0-9]*\"",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "get my own IP",
        "x": 160,
        "y": 1720,
        "wires": [
            [
                "600f1f97.226c4"
            ],
            [],
            []
        ]
    },
    {
        "id": "600f1f97.226c4",
        "type": "function",
        "z": "7d7b30a8.5bc2b",
        "name": "strip my ip from batctl output",
        "func": "var my_ip = msg.payload\nvar ip_arr = msg.ips;\n\n//Filter out newline from shell command result\nmy_ip = my_ip.replace(/(\\r\\n|\\n|\\r)/gm, \"\"); \n\nip_arr = ip_arr.filter(e => e !== my_ip);\n\nmsg.payload = ip_arr\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 1780,
        "wires": [
            [
                "983d5af.c2a63a8",
                "edf9809c.5c166"
            ]
        ]
    },
    {
        "id": "a53c96c6.d61cd8",
        "type": "inject",
        "z": "f9e6941.9f5df68",
        "name": "Open music file",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "open",
        "payloadType": "str",
        "x": 420,
        "y": 80,
        "wires": [
            [
                "7a6093ad.512abc"
            ]
        ]
    },
    {
        "id": "10e903ef.9912ac",
        "type": "inject",
        "z": "f9e6941.9f5df68",
        "name": "PlayPause music file",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "playpause",
        "payloadType": "str",
        "x": 370,
        "y": 140,
        "wires": [
            [
                "7a6093ad.512abc"
            ]
        ]
    },
    {
        "id": "741833ea.8be7cc",
        "type": "function",
        "z": "f9e6941.9f5df68",
        "name": "Voldown Smoother",
        "func": "\nvar o = false;\nfor (var i=0; i<8; i++) {\n    node.send( {payload:\"volumedown\"} )\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 200,
        "wires": [
            [
                "c79ca805.386358"
            ]
        ]
    },
    {
        "id": "c79ca805.386358",
        "type": "delay",
        "z": "f9e6941.9f5df68",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "2",
        "nbRateUnits": "",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 670,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "67eb6bf0.5a1ab4",
        "type": "debug",
        "z": "f9e6941.9f5df68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "51255d49.972864",
        "type": "function",
        "z": "f9e6941.9f5df68",
        "name": "Volup Smoother",
        "func": "\nvar o = false;\nfor (var i=0; i<8; i++) {\n    node.send( {payload:\"volumeup\"} )\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 320,
        "wires": [
            [
                "c79ca805.386358"
            ]
        ]
    },
    {
        "id": "8d46558.c8915a8",
        "type": "rpi-gpio in",
        "z": "f9e6941.9f5df68",
        "name": "",
        "pin": "12",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "x": 110,
        "y": 260,
        "wires": [
            [
                "a7a0f7fb.699e68"
            ]
        ]
    },
    {
        "id": "a7a0f7fb.699e68",
        "type": "switch",
        "z": "f9e6941.9f5df68",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 280,
        "y": 260,
        "wires": [
            [
                "741833ea.8be7cc"
            ],
            [
                "51255d49.972864"
            ]
        ]
    },
    {
        "id": "51164af4.4ec64c",
        "type": "rpi-gpio in",
        "z": "11ea8962.3c616f",
        "name": "PIR sensor",
        "pin": "36",
        "intype": "tri",
        "debounce": "25",
        "read": true,
        "x": 140,
        "y": 280,
        "wires": [
            [
                "3f26ffd0.68ee18",
                "f42e36fa.cbacf8",
                "c59d8205.125b8"
            ]
        ]
    },
    {
        "id": "f42e36fa.cbacf8",
        "type": "rpi-gpio out",
        "z": "11ea8962.3c616f",
        "name": "Simple LED",
        "pin": "11",
        "set": false,
        "level": "0",
        "freq": "1000",
        "out": "pwm",
        "x": 530,
        "y": 100,
        "wires": []
    },
    {
        "id": "3f26ffd0.68ee18",
        "type": "debug",
        "z": "11ea8962.3c616f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 410,
        "y": 280,
        "wires": []
    },
    {
        "id": "cb329c61.fb966",
        "type": "inject",
        "z": "11ea8962.3c616f",
        "name": "on",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "f42e36fa.cbacf8"
            ]
        ]
    },
    {
        "id": "13a32bd6.8226dc",
        "type": "inject",
        "z": "11ea8962.3c616f",
        "name": "off",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "f42e36fa.cbacf8"
            ]
        ]
    },
    {
        "id": "a65b3310.730488",
        "type": "inject",
        "z": "11ea8962.3c616f",
        "name": "Open music file",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "open",
        "payloadType": "str",
        "x": 880,
        "y": 640,
        "wires": [
            [
                "3814255d.914faa"
            ]
        ]
    },
    {
        "id": "2d2862fc.5aebbe",
        "type": "inject",
        "z": "11ea8962.3c616f",
        "name": "PlayPause music file",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "playpause",
        "payloadType": "str",
        "x": 830,
        "y": 700,
        "wires": [
            [
                "3814255d.914faa"
            ]
        ]
    },
    {
        "id": "e8a7e884.00b53",
        "type": "debug",
        "z": "11ea8962.3c616f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1070,
        "y": 860,
        "wires": []
    },
    {
        "id": "d132dcd1.4feff8",
        "type": "inject",
        "z": "11ea8962.3c616f",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "volumedown",
        "payloadType": "str",
        "x": 750,
        "y": 760,
        "wires": [
            [
                "3814255d.914faa"
            ]
        ]
    },
    {
        "id": "4c6e847e.fc97fc",
        "type": "inject",
        "z": "11ea8962.3c616f",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "volumeup",
        "payloadType": "str",
        "x": 700,
        "y": 800,
        "wires": [
            [
                "3814255d.914faa"
            ]
        ]
    },
    {
        "id": "8a0021f.77dfde",
        "type": "inject",
        "z": "11ea8962.3c616f",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "setvolume 0.5",
        "payloadType": "str",
        "x": 610,
        "y": 840,
        "wires": [
            [
                "3814255d.914faa"
            ]
        ]
    },
    {
        "id": "4acd7ab3.1737a4",
        "type": "inject",
        "z": "11ea8962.3c616f",
        "name": "Set 0.9",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 570,
        "y": 960,
        "wires": [
            [
                "e44ac4f8.a7b81"
            ]
        ]
    },
    {
        "id": "f3664879.ed716",
        "type": "delay",
        "z": "11ea8962.3c616f",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "2",
        "nbRateUnits": "",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 900,
        "y": 1140,
        "wires": [
            [
                "3814255d.914faa"
            ]
        ]
    },
    {
        "id": "753266f9.5815b",
        "type": "inject",
        "z": "11ea8962.3c616f",
        "name": "Set 0.1",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 570,
        "y": 920,
        "wires": [
            [
                "e44ac4f8.a7b81"
            ]
        ]
    },
    {
        "id": "29c76746.4ec05",
        "type": "function",
        "z": "11ea8962.3c616f",
        "name": "",
        "func": "\n\nif (\"status\" in msg && \"vol\" in msg.status && \"setvolume\" in msg){\n    notToBe = msg.status.vol\n    toBe = msg.setvolume\n    \n    diff = toBe - notToBe ;\n    \n    while (Math.abs(diff)>=0.05) {\n        \n        if (Math.abs(diff) <= 0.1) {\n            notToBe = notToBe + diff;\n            msg = {payload: \"setvolume \"+toBe};\n            diff = 0.0;\n        }\n        else{\n            \n            notToBe = notToBe + diff/Math.abs(diff) * 0.1;\n            msg = {payload: \"setvolume \"+notToBe};\n            diff = toBe - notToBe ;\n            \n        }\n        \n        node.send(msg)\n        \n    }\n    \n    //return {payload: msg.status.vol - msg.setvolume}    \n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 1080,
        "wires": [
            [
                "b58cc52b.2c1d78",
                "f3664879.ed716"
            ]
        ]
    },
    {
        "id": "e44ac4f8.a7b81",
        "type": "join",
        "z": "11ea8962.3c616f",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "",
        "propertyType": "full",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 730,
        "y": 1000,
        "wires": [
            [
                "29c76746.4ec05"
            ]
        ]
    },
    {
        "id": "b58cc52b.2c1d78",
        "type": "debug",
        "z": "11ea8962.3c616f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 890,
        "y": 1080,
        "wires": []
    },
    {
        "id": "69d8d1ee.a0e5e",
        "type": "function",
        "z": "11ea8962.3c616f",
        "name": "",
        "func": "if (msg.topic == \"local\"){\n    var local = msg.payload\n    context.set(\"local_\",local)\n    var network = context.get(\"network_\")\n} \nelse{\n    var network = msg.payload\n    context.set(\"network_\",network)\n    var local = context.get(\"local_\")\n}\n\nif (local == 1){\n    if (network == 1){\n        node.status({fill:\"yellow\",shape:\"dot\",text:\"middle\"+ local+ \" \" + network});\n        return {setvolume: 0.4, complete: true};\n    }\n    else{\n        node.status({fill:\"red\",shape:\"dot\",text:\"close - low vol\" + local+ \" \" + network});\n        return {setvolume: 0.1, complete: true};\n    }\n}\nelse{\n    node.status({fill:\"green\",shape:\"dot\",text:\"far - loud\" + local+ \" \" + network});\n    return {setvolume: 0.7, complete: true};\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\ncontext.set(\"local_\",0)\ncontext.set(\"network_\",0)",
        "finalize": "",
        "x": 400,
        "y": 1000,
        "wires": [
            [
                "e44ac4f8.a7b81"
            ]
        ]
    },
    {
        "id": "4cadfd20.e5e70c",
        "type": "inject",
        "z": "11ea8962.3c616f",
        "name": "open",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "control",
        "payload": "open",
        "payloadType": "str",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "b7c2f9b.af7a508"
            ]
        ]
    },
    {
        "id": "aa922bde.2d59f8",
        "type": "inject",
        "z": "11ea8962.3c616f",
        "name": "q",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "control",
        "payload": "queue",
        "payloadType": "str",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "b7c2f9b.af7a508"
            ]
        ]
    },
    {
        "id": "c59d8205.125b8",
        "type": "function",
        "z": "11ea8962.3c616f",
        "name": "",
        "func": "// if payload == 0\n        //start queue\n        //send 0\n        //start timer\n\n// if value == 1 \n    //send 1\n    \n// when timer done\n    //open queue\n\n\n\nif (msg.payload == 0){\n    node.send([{payload: \"queue\", topic: \"control\"},null])\n    node.send([{payload: 0, topic: \"local\"},{payload: \"open\", topic: \"control\"}])\n}\nelse{\n    node.send([{payload: 1, topic: \"local\"},null])\n}\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "x": 300,
        "y": 420,
        "wires": [
            [
                "43b0974c.67c0d8",
                "b7c2f9b.af7a508"
            ],
            [
                "15a975c2.8a41c2",
                "9674895.df3b878"
            ]
        ]
    },
    {
        "id": "15a975c2.8a41c2",
        "type": "debug",
        "z": "11ea8962.3c616f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 510,
        "y": 480,
        "wires": []
    },
    {
        "id": "43b0974c.67c0d8",
        "type": "debug",
        "z": "11ea8962.3c616f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 490,
        "y": 420,
        "wires": []
    },
    {
        "id": "9674895.df3b878",
        "type": "delay",
        "z": "11ea8962.3c616f",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 440,
        "y": 560,
        "wires": [
            [
                "b7c2f9b.af7a508"
            ]
        ]
    },
    {
        "id": "6e3c33dd.a2cd24",
        "type": "debug",
        "z": "11ea8962.3c616f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 510,
        "y": 660,
        "wires": []
    },
    {
        "id": "121429ca.de7066",
        "type": "tcp out",
        "z": "11ea8962.3c616f",
        "host": "192.168.0.108",
        "port": "55554",
        "beserver": "client",
        "base64": false,
        "end": false,
        "name": "",
        "x": 390,
        "y": 1300,
        "wires": []
    },
    {
        "id": "82a14ed2.31551",
        "type": "debug",
        "z": "e71c9d35.0449a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 220,
        "wires": []
    },
    {
        "id": "9f0c00ed.97aed",
        "type": "inject",
        "z": "e71c9d35.0449a",
        "name": "Open music file",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "open",
        "payloadType": "str",
        "x": 440,
        "y": 380,
        "wires": [
            [
                "4813fbf0.f351c4"
            ]
        ]
    },
    {
        "id": "baa1b081.97e2f",
        "type": "inject",
        "z": "e71c9d35.0449a",
        "name": "PlayPause music file",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "playpause",
        "payloadType": "str",
        "x": 430,
        "y": 440,
        "wires": [
            [
                "4813fbf0.f351c4"
            ]
        ]
    },
    {
        "id": "7836eebb.be616",
        "type": "function",
        "z": "e71c9d35.0449a",
        "name": "Voldown Smoother",
        "func": "\nvar o = false;\nfor (var i=0; i<8; i++) {\n    node.send( {payload:\"volumedown\"} )\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 580,
        "wires": [
            [
                "5d3b773f.fb5528"
            ]
        ]
    },
    {
        "id": "5d3b773f.fb5528",
        "type": "delay",
        "z": "e71c9d35.0449a",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "2",
        "nbRateUnits": "",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 730,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "5f63e4f5.7d7bdc",
        "type": "function",
        "z": "e71c9d35.0449a",
        "name": "Volup Smoother",
        "func": "\nvar o = false;\nfor (var i=0; i<8; i++) {\n    node.send( {payload:\"volumeup\"} )\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 700,
        "wires": [
            [
                "5d3b773f.fb5528"
            ]
        ]
    },
    {
        "id": "ef6df5da.7b6058",
        "type": "switch",
        "z": "e71c9d35.0449a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 320,
        "y": 640,
        "wires": [
            [
                "7836eebb.be616"
            ],
            [
                "5f63e4f5.7d7bdc"
            ]
        ]
    },
    {
        "id": "cf67e593.0dae78",
        "type": "function",
        "z": "e71c9d35.0449a",
        "name": "",
        "func": "var payload=parseInt(msg.payload);\nratio = payload/800\nmsg.payload = \"setvolume \" + String(ratio)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 280,
        "wires": [
            [
                "4813fbf0.f351c4",
                "ab0123fd.17203"
            ]
        ]
    },
    {
        "id": "ab0123fd.17203",
        "type": "debug",
        "z": "e71c9d35.0449a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 280,
        "wires": []
    },
    {
        "id": "9307569f.dbe728",
        "type": "inject",
        "z": "e71c9d35.0449a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 420,
        "wires": [
            [
                "cf67e593.0dae78"
            ]
        ]
    },
    {
        "id": "20cd612e.ad7976",
        "type": "debug",
        "z": "664289e.22d72f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 80,
        "wires": []
    },
    {
        "id": "bfdd6fbd.6b36e",
        "type": "inject",
        "z": "664289e.22d72f8",
        "name": "Open music file",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "open",
        "payloadType": "str",
        "x": 600,
        "y": 340,
        "wires": [
            [
                "e98895de.973fd8"
            ]
        ]
    },
    {
        "id": "caae6bb4.b253a",
        "type": "inject",
        "z": "664289e.22d72f8",
        "name": "PlayPause music file",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "playpause",
        "payloadType": "str",
        "x": 590,
        "y": 400,
        "wires": [
            [
                "e98895de.973fd8"
            ]
        ]
    },
    {
        "id": "5c88545b.e8f244",
        "type": "debug",
        "z": "664289e.22d72f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 140,
        "wires": []
    },
    {
        "id": "c6ac92fc.1d9de8",
        "type": "tcp in",
        "z": "664289e.22d72f8",
        "name": "",
        "server": "server",
        "host": "",
        "port": "55555",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "network",
        "base64": false,
        "x": 160,
        "y": 140,
        "wires": [
            [
                "20cd612e.ad7976",
                "3bce1064.56afc8"
            ]
        ]
    },
    {
        "id": "3bce1064.56afc8",
        "type": "function",
        "z": "664289e.22d72f8",
        "name": "Get distance",
        "func": "var payload=parseFloat(msg.payload);\nmsg.payload = payload;\nnode.status({fill:\"blue\",shape:\"dot\",text:\"Dist: \"+payload});\nmsg.topic=\"distance\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 180,
        "wires": [
            [
                "5c88545b.e8f244",
                "30928911.12788e",
                "68368eec.13e8e8",
                "64d5181d.d25578"
            ]
        ]
    },
    {
        "id": "30928911.12788e",
        "type": "function",
        "z": "664289e.22d72f8",
        "name": "Environment adjustments",
        "func": "let ratio = msg.payload/800\nmsg.payload = \"setvolume \" + String(ratio)\nnode.status({fill:\"blue\",shape:\"dot\",text:\"Volume: \" + ratio});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 570,
        "y": 200,
        "wires": [
            [
                "9d633fdc.421f7",
                "e98895de.973fd8"
            ]
        ]
    },
    {
        "id": "9d633fdc.421f7",
        "type": "debug",
        "z": "664289e.22d72f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 160,
        "wires": []
    },
    {
        "id": "68368eec.13e8e8",
        "type": "function",
        "z": "664289e.22d72f8",
        "name": "Environment adjustments",
        "func": "let ratio = msg.payload/800\nmsg.payload = (ratio * 100).toFixed(3)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 600,
        "wires": [
            [
                "5aabe545.44e30c"
            ]
        ]
    },
    {
        "id": "4cca60de.be18d",
        "type": "inject",
        "z": "664289e.22d72f8",
        "name": "clear chart",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "x": 320,
        "y": 540,
        "wires": [
            [
                "64d5181d.d25578"
            ]
        ]
    },
    {
        "id": "b1fe4afe.3565a8",
        "type": "inject",
        "z": "664289e.22d72f8",
        "name": "clear vol",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 300,
        "y": 680,
        "wires": [
            [
                "5aabe545.44e30c"
            ]
        ]
    },
    {
        "id": "9b193d42.3ff5c8",
        "type": "inject",
        "z": "29c1db97.901354",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 260,
        "y": 200,
        "wires": [
            [
                "762fefef.03986"
            ]
        ]
    },
    {
        "id": "16cca353.9df16d",
        "type": "file in",
        "z": "29c1db97.901354",
        "name": "read ips",
        "filename": "tessst",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 260,
        "y": 500,
        "wires": [
            [
                "c9a97b60.08c958"
            ]
        ]
    },
    {
        "id": "c9a97b60.08c958",
        "type": "csv",
        "z": "29c1db97.901354",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 250,
        "y": 560,
        "wires": [
            [
                "165e6a7f.72b51e"
            ]
        ]
    },
    {
        "id": "762fefef.03986",
        "type": "exec",
        "z": "29c1db97.901354",
        "command": "sudo hcitool clock | grep Clock  | awk '{print $2}'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "get bt_clock",
        "x": 270,
        "y": 260,
        "wires": [
            [
                "5a8591bc.5ebcf"
            ],
            [],
            []
        ]
    },
    {
        "id": "5a8591bc.5ebcf",
        "type": "function",
        "z": "29c1db97.901354",
        "name": "rename payload and add delay",
        "func": "msg.payload = parseInt(msg.payload);\nmsg.payload += 3200*8; //Add 5 seconds delay\nmsg.clock = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 320,
        "wires": [
            [
                "bac139c3.91a82",
                "f2079758.54e2a"
            ]
        ]
    },
    {
        "id": "bac139c3.91a82",
        "type": "exec",
        "z": "29c1db97.901354",
        "command": "sudo hcitool dev | grep hci | awk '{print $2}'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "get my bt_addr",
        "x": 280,
        "y": 380,
        "wires": [
            [
                "f921402c.d28538"
            ],
            [],
            []
        ]
    },
    {
        "id": "72b07d91.6e2d14",
        "type": "tcp request",
        "z": "29c1db97.901354",
        "server": "",
        "port": "55557",
        "out": "immed",
        "splitc": " ",
        "name": "Send parameters to partner",
        "x": 320,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "165e6a7f.72b51e",
        "type": "function",
        "z": "29c1db97.901354",
        "name": "",
        "func": "msg.host = msg.payload.col1;\nmsg.payload = msg.clock.toString() + \",\" + msg. bt_addr.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 620,
        "wires": [
            [
                "72b07d91.6e2d14"
            ]
        ]
    },
    {
        "id": "f921402c.d28538",
        "type": "function",
        "z": "29c1db97.901354",
        "name": "rename msg payload member",
        "func": "msg.bt_addr = msg.payload;\nmsg.clock = msg.clock;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 440,
        "wires": [
            [
                "16cca353.9df16d"
            ]
        ]
    },
    {
        "id": "f2079758.54e2a",
        "type": "exec",
        "z": "29c1db97.901354",
        "command": "sudo /home/pi/start_at_bt_clock",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 670,
        "y": 320,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "88af41f1.2f18c",
        "type": "tcp in",
        "z": "29c1db97.901354",
        "name": "Receive clock and bt_addr",
        "server": "server",
        "host": "",
        "port": "55557",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 1050,
        "y": 260,
        "wires": [
            [
                "599e500e.33422"
            ]
        ]
    },
    {
        "id": "599e500e.33422",
        "type": "csv",
        "z": "29c1db97.901354",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1060,
        "y": 320,
        "wires": [
            [
                "6cf05235.965574"
            ]
        ]
    },
    {
        "id": "6cf05235.965574",
        "type": "function",
        "z": "29c1db97.901354",
        "name": "",
        "func": "msg.payload = msg.payload.col1 + \" \" + msg.payload.col2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1060,
        "y": 380,
        "wires": [
            [
                "575591c3.9b5fd"
            ]
        ]
    },
    {
        "id": "575591c3.9b5fd",
        "type": "exec",
        "z": "29c1db97.901354",
        "command": "sudo /home/pi/bt_sync_node_red",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1060,
        "y": 440,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "4d77c187.4a8f3",
        "type": "comment",
        "z": "29c1db97.901354",
        "name": "Instructions",
        "info": "The execution of this flow requires that there be a file at /home/pi/tessst in which the ip-addresses of all devices that you want to synchronize are listed. \n Also all devices must have been paired and trusted at a prior time.(see github docs)",
        "x": 250,
        "y": 160,
        "wires": []
    },
    {
        "id": "e5d9eb.0eb01618",
        "type": "ui_colour_picker",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "label": "Pick a color",
        "group": "ce52a348.41d78",
        "format": "rgb",
        "outformat": "object",
        "showSwatch": false,
        "showPicker": true,
        "showValue": false,
        "showHue": false,
        "showAlpha": false,
        "showLightness": true,
        "square": "false",
        "dynOutput": "true",
        "order": 0,
        "width": "10",
        "height": "5",
        "passthru": true,
        "topic": "",
        "x": 90,
        "y": 820,
        "wires": [
            [
                "30e73299.7e539e"
            ]
        ]
    },
    {
        "id": "5aabe545.44e30c",
        "type": "ui_gauge",
        "z": "664289e.22d72f8",
        "name": "",
        "group": "ce52a348.41d78",
        "order": 1,
        "width": "9",
        "height": "5",
        "gtype": "gage",
        "title": "Speaker volume",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 600,
        "y": 600,
        "wires": []
    },
    {
        "id": "64d5181d.d25578",
        "type": "ui_chart",
        "z": "664289e.22d72f8",
        "name": "",
        "group": "ce52a348.41d78",
        "order": 2,
        "width": "9",
        "height": "6",
        "label": "Distance",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "850",
        "removeOlder": "1",
        "removeOlderPoints": "60",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 500,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "7a6093ad.512abc",
        "type": "rpi-omxplayer",
        "z": "f9e6941.9f5df68",
        "name": "",
        "filename": "/home/pi/music/sinatra_boots.mp3",
        "audiooutput": "local",
        "blackbackground": true,
        "disablekeys": false,
        "disableosd": true,
        "disableghostbox": false,
        "subtitlepath": "",
        "loop": true,
        "x": 750,
        "y": 180,
        "wires": [
            [
                "67eb6bf0.5a1ab4"
            ]
        ]
    },
    {
        "id": "3814255d.914faa",
        "type": "rpi-omxplayer",
        "z": "11ea8962.3c616f",
        "name": "",
        "filename": "/home/pi/music/sinatra_boots.mp3",
        "audiooutput": "local",
        "blackbackground": true,
        "disablekeys": false,
        "disableosd": true,
        "disableghostbox": false,
        "subtitlepath": "",
        "loop": true,
        "x": 910,
        "y": 860,
        "wires": [
            [
                "e8a7e884.00b53",
                "e44ac4f8.a7b81"
            ]
        ]
    },
    {
        "id": "4813fbf0.f351c4",
        "type": "rpi-omxplayer",
        "z": "e71c9d35.0449a",
        "name": "",
        "filename": "/home/pi/music/sinatra_boots.mp3",
        "audiooutput": "local",
        "blackbackground": true,
        "disablekeys": false,
        "disableosd": true,
        "disableghostbox": false,
        "subtitlepath": "",
        "loop": true,
        "x": 750,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "e98895de.973fd8",
        "type": "rpi-omxplayer",
        "z": "664289e.22d72f8",
        "name": "",
        "filename": "/home/pi/music/sinatra_boots.mp3",
        "audiooutput": "local",
        "blackbackground": true,
        "disablekeys": false,
        "disableosd": true,
        "disableghostbox": false,
        "subtitlepath": "",
        "loop": true,
        "x": 830,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "e43f785c.f02eb8",
        "type": "pythonshell in",
        "z": "e71c9d35.0449a",
        "name": "motion",
        "pyfile": "/home/pi/.node-red/projects/Smart-Environment/camera/motion-detection/motion_detector.py",
        "virtualenv": "/home/pi/.virtualenvs/cv",
        "continuous": true,
        "stdInData": false,
        "x": 130,
        "y": 220,
        "wires": [
            [
                "82a14ed2.31551",
                "cf67e593.0dae78"
            ]
        ]
    },
    {
        "id": "b7c2f9b.af7a508",
        "type": "q-gate",
        "z": "11ea8962.3c616f",
        "name": "",
        "controlTopic": "control",
        "defaultState": "open",
        "openCmd": "open",
        "closeCmd": "close",
        "toggleCmd": "toggle",
        "queueCmd": "queue",
        "defaultCmd": "default",
        "triggerCmd": "trigger",
        "flushCmd": "flush",
        "resetCmd": "reset",
        "peekCmd": "peek",
        "dropCmd": "drop",
        "statusCmd": "status",
        "maxQueueLength": "1",
        "keepNewest": true,
        "qToggle": true,
        "persist": false,
        "storeName": "memory",
        "x": 310,
        "y": 660,
        "wires": [
            [
                "6e3c33dd.a2cd24",
                "69d8d1ee.a0e5e",
                "121429ca.de7066"
            ]
        ]
    },
    {
        "id": "10c4705a.06994",
        "type": "rpi-gpio out",
        "z": "a93faece.d7746",
        "name": "",
        "pin": "13",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "pwm",
        "x": 680,
        "y": 200,
        "wires": []
    },
    {
        "id": "5a2f46.a54810bc",
        "type": "inject",
        "z": "a93faece.d7746",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "num",
        "x": 230,
        "y": 300,
        "wires": [
            [
                "10c4705a.06994",
                "9df5e113.da853"
            ]
        ]
    },
    {
        "id": "6156e78e.9ddf58",
        "type": "inject",
        "z": "a93faece.d7746",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "num",
        "x": 170,
        "y": 360,
        "wires": [
            [
                "10c4705a.06994",
                "9df5e113.da853"
            ]
        ]
    },
    {
        "id": "fe998ebf.b775e",
        "type": "inject",
        "z": "a93faece.d7746",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "90",
        "payloadType": "num",
        "x": 170,
        "y": 400,
        "wires": [
            [
                "10c4705a.06994",
                "9df5e113.da853"
            ]
        ]
    },
    {
        "id": "9ce10920.fa2ea8",
        "type": "inject",
        "z": "a93faece.d7746",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "num",
        "x": 230,
        "y": 460,
        "wires": [
            [
                "10c4705a.06994",
                "939da3b2.d703a",
                "9df5e113.da853"
            ]
        ]
    },
    {
        "id": "c3d0b3f2.c8fdc",
        "type": "pythonshell in",
        "z": "a93faece.d7746",
        "name": "",
        "pyfile": "/home/pi/Desktop/raspi-camera-stream/pi_motion.py",
        "virtualenv": "/home/pi/cv",
        "continuous": true,
        "stdInData": false,
        "x": 220,
        "y": 140,
        "wires": [
            [
                "32db511d.af19be",
                "b2be3872.4b26a8"
            ]
        ]
    },
    {
        "id": "32db511d.af19be",
        "type": "debug",
        "z": "a93faece.d7746",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 140,
        "wires": []
    },
    {
        "id": "b2be3872.4b26a8",
        "type": "range",
        "z": "a93faece.d7746",
        "minin": "0",
        "maxin": "625",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": true,
        "property": "payload",
        "name": "Map Distance to Brightness",
        "x": 360,
        "y": 200,
        "wires": [
            [
                "10c4705a.06994",
                "6ccef668.611bf",
                "9df5e113.da853"
            ]
        ]
    },
    {
        "id": "939da3b2.d703a",
        "type": "rpi-gpio out",
        "z": "a93faece.d7746",
        "name": "",
        "pin": "15",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "pwm",
        "x": 680,
        "y": 240,
        "wires": []
    },
    {
        "id": "6e9e5e73.be28",
        "type": "exec",
        "z": "a93faece.d7746",
        "command": "sudo amixer sget 'Headphone' |grep -Po '[0-9][0-9]?[0-9]?%' | grep -m1 \"\" | grep -Po '[0-9][0-9]?[0-9]?'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "get volume",
        "x": 1000,
        "y": 460,
        "wires": [
            [
                "10e30242.52af86"
            ],
            [],
            []
        ]
    },
    {
        "id": "2e8e5d24.628e82",
        "type": "inject",
        "z": "a93faece.d7746",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 840,
        "y": 460,
        "wires": [
            [
                "6e9e5e73.be28"
            ]
        ]
    },
    {
        "id": "383e295a.eeae16",
        "type": "function",
        "z": "a93faece.d7746",
        "name": "prepare payload",
        "func": "msg.payload = msg.payload + \"%\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 360,
        "wires": [
            [
                "43d646c0.c73c"
            ]
        ]
    },
    {
        "id": "43d646c0.c73c",
        "type": "exec",
        "z": "a93faece.d7746",
        "command": "sudo amixer sset 'Headphone' ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "set volume",
        "x": 1190,
        "y": 360,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "6ccef668.611bf",
        "type": "range",
        "z": "a93faece.d7746",
        "minin": "0",
        "maxin": "100",
        "minout": "60",
        "maxout": "100",
        "action": "scale",
        "round": true,
        "property": "payload",
        "name": "minimum value should be 60",
        "x": 740,
        "y": 360,
        "wires": [
            [
                "383e295a.eeae16"
            ]
        ]
    },
    {
        "id": "10e30242.52af86",
        "type": "debug",
        "z": "a93faece.d7746",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 460,
        "wires": []
    },
    {
        "id": "a82f30ed.c53d6",
        "type": "function",
        "z": "335a17ee.f1f5f8",
        "name": "Get distance",
        "func": "if (msg.payload.includes(\",\")){\n    let payload=msg.payload.split(\",\");\n    let x = parseFloat(payload[0]);\n    let y = parseFloat(payload[1]);\n\n\n    var node_x = global.get(\"node_x\");\n    var node_y = global.get(\"node_y\");\n\n    let dist = Math.round(Math.sqrt((x-node_x)**2 + (y-node_y)**2))\n    msg.payload = dist;\n\n    if (isNaN(dist)){\n        node.warn(payload)\n    }\n\n    node.status({fill:\"blue\",shape:\"dot\",text:\"Dist: \"+dist});\n    msg.topic=\"distance\"\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 240,
        "wires": [
            [
                "f2510df6.4e544",
                "3b7a51ab.88ecbe"
            ]
        ]
    },
    {
        "id": "1de43042.962238",
        "type": "function",
        "z": "335a17ee.f1f5f8",
        "name": "setting vars",
        "func": "\nglobal.set(\"node_x\",msg.payload.x);\nglobal.set(\"node_y\",msg.payload.y);\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "21fc3ddd.3a5c12",
        "type": "inject",
        "z": "335a17ee.f1f5f8",
        "name": "Inject position",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"x\":35,\"y\":54}",
        "payloadType": "json",
        "x": 560,
        "y": 100,
        "wires": [
            [
                "1de43042.962238"
            ]
        ]
    },
    {
        "id": "da028ad4.22f0e",
        "type": "comment",
        "z": "335a17ee.f1f5f8",
        "name": "Set the node position here (later through dashboard)",
        "info": "",
        "x": 640,
        "y": 60,
        "wires": []
    },
    {
        "id": "f87111eb.45e5c8",
        "type": "function",
        "z": "335a17ee.f1f5f8",
        "name": "pass position to chart.js and store in flow vars",
        "func": "if (msg.payload.includes(\",\")){\nvar pos3 = msg.payload.split(\",\"); \n\nvar pos0 = flow.get(\"pos0\");\nvar pos1 = flow.get(\"pos1\");\nvar pos2 = flow.get(\"pos2\");\n\nmsg.payload={\n    \"channel\": \"Position\",\n    \"color\": \"Green\",\n    \"dataset\": [\n        {\n            \"x\": pos0[0],\n            \"y\": pos0[1],\n            \"r\": 1\n        },\n        {\n            \"x\": pos1[0],\n            \"y\": pos1[1],\n            \"r\": 3\n        },\n        {\n            \"x\": pos2[0],\n            \"y\": pos2[1],\n            \"r\": 4\n        },\n        {\n            \"x\": pos3[0],\n            \"y\": pos3[1],\n            \"r\": 5\n        },\n\n    ]\n}               \n\nflow.set(\"pos0\",pos1);\nflow.set(\"pos1\",pos2);\nflow.set(\"pos2\", pos3);\n\nreturn msg;\n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 930,
        "y": 480,
        "wires": [
            [
                "2b1d2dd6.c29392"
            ]
        ]
    },
    {
        "id": "230dfeb6.8ba792",
        "type": "change",
        "z": "df521596.125698",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "restore",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 589.5,
        "y": 53,
        "wires": [
            []
        ]
    },
    {
        "id": "37028a91.0b1ffe",
        "type": "json",
        "z": "df521596.125698",
        "name": "",
        "x": 175.5,
        "y": 85,
        "wires": [
            [
                "230dfeb6.8ba792"
            ]
        ]
    },
    {
        "id": "b78fb72d.ec3d78",
        "type": "catch",
        "z": "df521596.125698",
        "name": "",
        "scope": [
            "37028a91.0b1ffe"
        ],
        "x": 183.5,
        "y": 117,
        "wires": [
            [
                "c7f43b1c.b7b5d8"
            ]
        ]
    },
    {
        "id": "c7f43b1c.b7b5d8",
        "type": "change",
        "z": "df521596.125698",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 354.5,
        "y": 116,
        "wires": [
            [
                "230dfeb6.8ba792"
            ]
        ]
    },
    {
        "id": "856afee0.348098",
        "type": "inject",
        "z": "df521596.125698",
        "name": "Trigger restore",
        "repeat": "",
        "crontab": "",
        "once": true,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 618.5,
        "y": 169,
        "wires": [
            []
        ]
    },
    {
        "id": "bfa9b689.96d9e8",
        "type": "pythonshell in",
        "z": "335a17ee.f1f5f8",
        "name": "camera_coordinates",
        "pyfile": "/home/pi/Desktop/raspi-camera-stream/pi_motion_positioned.py",
        "virtualenv": "/home/pi/.virtualenvs/cv",
        "continuous": true,
        "stdInData": false,
        "x": 200,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "3e2b3e40.a44722",
        "type": "inject",
        "z": "335a17ee.f1f5f8",
        "name": "initialize",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "328e266f.bf954a"
            ]
        ]
    },
    {
        "id": "328e266f.bf954a",
        "type": "function",
        "z": "335a17ee.f1f5f8",
        "name": "",
        "func": "flow.set(\"pos0\", [0,0]);\nflow.set(\"pos1\", [0,0]);\nflow.set(\"pos2\", [0,0]);\nflow.set(\"ref_pos\", [0,0]);\n\nflow.set(\"goal_brightness\", 0);\nflow.set(\"brightness\",0)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "1f5165f2.00bfd2",
        "type": "inject",
        "z": "a93faece.d7746",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 230,
        "y": 260,
        "wires": [
            [
                "9df5e113.da853"
            ]
        ]
    },
    {
        "id": "81ba9a01.6b3348",
        "type": "tcp in",
        "z": "335a17ee.f1f5f8",
        "name": "receive pos",
        "server": "server",
        "host": "",
        "port": "55559",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "base64": false,
        "x": 110,
        "y": 200,
        "wires": [
            [
                "a82f30ed.c53d6",
                "f87111eb.45e5c8"
            ]
        ]
    },
    {
        "id": "9df5e113.da853",
        "type": "rpi-gpio out",
        "z": "a93faece.d7746",
        "name": "",
        "pin": "11",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "pwm",
        "x": 680,
        "y": 160,
        "wires": []
    },
    {
        "id": "f2510df6.4e544",
        "type": "function",
        "z": "335a17ee.f1f5f8",
        "name": "set global distance var",
        "func": "global.set(\"distance\", msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "1d707511.7e26d3",
        "type": "inject",
        "z": "335a17ee.f1f5f8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3.5,12.7",
        "payloadType": "str",
        "x": 120,
        "y": 280,
        "wires": [
            [
                "a82f30ed.c53d6"
            ]
        ]
    },
    {
        "id": "3fcff8ef.da0dc8",
        "type": "tcp out",
        "z": "335a17ee.f1f5f8",
        "host": "192.168.0.246",
        "port": "55559",
        "beserver": "client",
        "base64": false,
        "end": false,
        "name": "Send new position",
        "x": 830,
        "y": 620,
        "wires": []
    },
    {
        "id": "6a5e6e97.24169",
        "type": "function",
        "z": "335a17ee.f1f5f8",
        "name": "get latest position",
        "func": "if (msg.payload.includes(\",\")){\n\nvar pos2 = msg.payload.split(\",\"); \n\nvar ref = flow.get(\"ref_pos\");\n\n//only pass if position has changed\nif(ref == pos2){\n    node.done();\n    return;\n}\nflow.set(\"ref_pos\", pos2);\n\nmsg.payload = pos2[0] + \",\" + pos2[1];\nreturn msg;\n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 610,
        "y": 620,
        "wires": [
            [
                "3fcff8ef.da0dc8"
            ]
        ]
    },
    {
        "id": "4bf6a01d.a679e8",
        "type": "comment",
        "z": "335a17ee.f1f5f8",
        "name": "Start camera detection script",
        "info": "",
        "x": 480,
        "y": 480,
        "wires": []
    },
    {
        "id": "acecce6b.dbb1c8",
        "type": "comment",
        "z": "335a17ee.f1f5f8",
        "name": "Send new coordinates to connected nodes",
        "info": "",
        "x": 470,
        "y": 560,
        "wires": []
    },
    {
        "id": "dfaa6c75.d68188",
        "type": "comment",
        "z": "335a17ee.f1f5f8",
        "name": "Initialize global variables",
        "info": "",
        "x": 200,
        "y": 60,
        "wires": []
    },
    {
        "id": "83c2b404.ed457",
        "type": "comment",
        "z": "335a17ee.f1f5f8",
        "name": "Get brightness from partners",
        "info": "",
        "x": 360,
        "y": 200,
        "wires": []
    },
    {
        "id": "6ee611d3.623e9",
        "type": "exec",
        "z": "335a17ee.f1f5f8",
        "command": "/home/pi/.virtualenvs/cv/bin/python3.7 /home/pi/.node-red/projects/Smart-Environment/camera/motion-detection/raspi-camera-stream/pi_motion_positioned.py",
        "addpay": true,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "oldrc": false,
        "name": "camera_coordinates",
        "x": 390,
        "y": 420,
        "wires": [
            [
                "a82f30ed.c53d6",
                "f87111eb.45e5c8",
                "65a8b66e.26e828"
            ],
            [
                "df8f88b9.23d1d8"
            ],
            [
                "8fe29bd0.9541b8"
            ]
        ]
    },
    {
        "id": "c7dd7fa.24ba4",
        "type": "inject",
        "z": "335a17ee.f1f5f8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0,27 35,54",
        "payloadType": "str",
        "x": 160,
        "y": 420,
        "wires": [
            [
                "6ee611d3.623e9"
            ]
        ]
    },
    {
        "id": "96837b28.01d6e",
        "type": "inject",
        "z": "335a17ee.f1f5f8",
        "name": "kill",
        "props": [
            {
                "p": "kill",
                "v": "SIGKILL",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 500,
        "wires": [
            [
                "6ee611d3.623e9"
            ]
        ]
    },
    {
        "id": "df8f88b9.23d1d8",
        "type": "debug",
        "z": "335a17ee.f1f5f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 360,
        "wires": []
    },
    {
        "id": "8fe29bd0.9541b8",
        "type": "debug",
        "z": "335a17ee.f1f5f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 420,
        "wires": []
    },
    {
        "id": "3b7a51ab.88ecbe",
        "type": "debug",
        "z": "335a17ee.f1f5f8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 300,
        "wires": []
    },
    {
        "id": "2b1d2dd6.c29392",
        "type": "chartjs-bubble",
        "z": "335a17ee.f1f5f8",
        "name": "Show Position in graph",
        "path": "position_plot",
        "charttitle": "Camera model",
        "xaxis": "X",
        "yaxis": "Y",
        "x": 1240,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "65a8b66e.26e828",
        "type": "delay",
        "z": "335a17ee.f1f5f8",
        "name": "rate limit",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "5",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 410,
        "y": 620,
        "wires": [
            [
                "6a5e6e97.24169"
            ]
        ]
    },
    {
        "id": "8013867a.cfb4e8",
        "type": "debug",
        "z": "169d6861.ad61d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 180,
        "wires": []
    },
    {
        "id": "ac0f6165.c18cc",
        "type": "function",
        "z": "169d6861.ad61d",
        "name": "set globals",
        "func": "let confs = msg.payload;\n\n//check if inputs ok\nif (confs.room_x<0) { // just allow it || confs.room_y>confs.room\n    return msg;\n}\nif (confs.room_y<0) {\n    return msg;\n}\nif (confs.actuator_x<0) {\n    return msg;\n}\nif (confs.actuator_y<0) {\n    return msg;\n}\n\n\nglobal.set(\"room_width\",confs.room_x);\nglobal.set(\"room_height\",confs.room_y);\n\nglobal.set(\"node_x\",confs.actuator_x);\nglobal.set(\"node_y\",confs.axctuator_y);\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 570,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "5865c7d2.ffe4c",
        "type": "ui_form",
        "z": "169d6861.ad61d",
        "name": "",
        "label": "Camera Configuration",
        "group": "a29f7c61.ee366",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Camera left (x,y)",
                "value": "camera_l",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Camera right (x,y)",
                "value": "camera_r",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "camera_l": "",
            "camera_r": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "x": 300,
        "y": 180,
        "wires": [
            [
                "8013867a.cfb4e8",
                "d358d81c.ba7318"
            ]
        ]
    },
    {
        "id": "3e339e1f.d5de52",
        "type": "ui_form",
        "z": "169d6861.ad61d",
        "name": "",
        "label": "Actuator Configuration",
        "group": "a29f7c61.ee366",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Room width",
                "value": "room_x",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Room height",
                "value": "room_y",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Actuator x position",
                "value": "actuator_x",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Actuator y position",
                "value": "actuator_y",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "room_x": "",
            "room_y": "",
            "actuator_x": "",
            "actuator_y": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "x": 300,
        "y": 300,
        "wires": [
            [
                "ac0f6165.c18cc",
                "332410d7.ce996"
            ]
        ]
    },
    {
        "id": "332410d7.ce996",
        "type": "debug",
        "z": "169d6861.ad61d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 380,
        "wires": []
    },
    {
        "id": "d358d81c.ba7318",
        "type": "function",
        "z": "169d6861.ad61d",
        "name": "set globals",
        "func": "let confs = msg.payload;\n\nif (confs.camera_l.includes(\",\") && confs.camera_r.includes(\",\")){\n    global.set(\"cam_l\",confs.camera_l);\n    global.set(\"cam_r\",confs.camera_r);\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "1d98ea33.7afa26",
        "type": "function",
        "z": "3f43a09.7e6556",
        "name": "expo brightness",
        "func": "var distance = global.get(\"distance\");\nvar width = global.get(\"room_width\");\nvar height = global.get(\"room_height\");\nvar x = global.get(\"node_x\");\nvar y = global.get(\"node_y\");\n\n\nvar max_distance = Math.sqrt((Math.max((width-x), x))**2 + (Math.max(y, (height-y)))**2);\n\n\n/*\nif (distance < 50 && distance >= 0) {\n    brightness = 5/7 * distance;\n} \nif (distance >= 50) {\n    brightness = 30/14 * distance - 37;\n}\nif(brightness < 0)\nbrightness = 0;\n*/\n\nbrightness = distance / max_distance * 100;\n\nnode.status({fill:\"green\",shape:\"dot\",text:\"brightness \"+ brightness});\n\nmsg.payload = \"\" + brightness;\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 240,
        "wires": [
            [
                "69084e2a.b34f2",
                "e6d7cec.ab0e03"
            ],
            []
        ]
    },
    {
        "id": "69084e2a.b34f2",
        "type": "rpi-gpio out",
        "z": "3f43a09.7e6556",
        "name": "Red",
        "pin": "11",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "pwm",
        "x": 630,
        "y": 240,
        "wires": []
    },
    {
        "id": "fd728049.4f6a1",
        "type": "inject",
        "z": "3f43a09.7e6556",
        "name": "every 0.3 seconds",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.3",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "1d98ea33.7afa26",
                "8684c81d.b55158"
            ]
        ]
    },
    {
        "id": "d30f5b3d.6f5388",
        "type": "comment",
        "z": "3f43a09.7e6556",
        "name": "Increment brightness in smaller steps",
        "info": "",
        "x": 390,
        "y": 180,
        "wires": []
    },
    {
        "id": "474c9a87.cb5614",
        "type": "rpi-gpio out",
        "z": "3f43a09.7e6556",
        "name": "Blue",
        "pin": "13",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "pwm",
        "x": 830,
        "y": 300,
        "wires": []
    },
    {
        "id": "e6d7cec.ab0e03",
        "type": "function",
        "z": "3f43a09.7e6556",
        "name": "Change to Blue",
        "func": "msg.payload = 100 - msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 300,
        "wires": [
            [
                "474c9a87.cb5614"
            ]
        ]
    },
    {
        "id": "694a32fe.6dd99c",
        "type": "function",
        "z": "3f43a09.7e6556",
        "name": "prepare payload",
        "func": "msg.payload = msg.payload + \"%\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 420,
        "wires": [
            [
                "b5d08baa.4c9a58"
            ]
        ]
    },
    {
        "id": "b5d08baa.4c9a58",
        "type": "exec",
        "z": "3f43a09.7e6556",
        "command": "sudo amixer sset 'Headphone' ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "set volume",
        "x": 810,
        "y": 420,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "8684c81d.b55158",
        "type": "range",
        "z": "3f43a09.7e6556",
        "minin": "0",
        "maxin": "64",
        "minout": "60",
        "maxout": "100",
        "action": "scale",
        "round": true,
        "property": "payload",
        "name": "Map Distance to Volume",
        "x": 350,
        "y": 420,
        "wires": [
            [
                "694a32fe.6dd99c"
            ]
        ]
    }
]