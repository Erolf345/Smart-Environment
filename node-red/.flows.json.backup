[
    {
        "id": "7d7b30a8.5bc2b",
        "type": "tab",
        "label": "LED test flow",
        "disabled": true,
        "info": ""
    },
    {
        "id": "f9e6941.9f5df68",
        "type": "tab",
        "label": "Music Control",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b0d2fcdd.369d6",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard"
    },
    {
        "id": "ce52a348.41d78",
        "type": "ui_group",
        "name": "Chart",
        "tab": "b0d2fcdd.369d6",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "3aff5f59.0a6d88",
        "type": "ui_tab",
        "name": "Music Controls",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "875a7078.91fde",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "740a99d2.b07d1",
        "type": "function",
        "z": "7d7b30a8.5bc2b",
        "name": "startBlink",
        "func": "var BLINKDELAY = 250;\n\nvar light = true;\n\n\nvar blinker = setInterval(blink, BLINKDELAY);\n\nglobal.set(\"blinker\", blinker);\n\nfunction blink () {\n    \n    if (light) {\n        msg.payload = 1;\n        light = false;\n    }\n    \n    else {\n        msg.payload = 0;\n        light = true;\n    }\n    \n    node.send(msg);\n}\n\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 200,
        "wires": [
            [
                "41b167bc.bbffc"
            ]
        ]
    },
    {
        "id": "73f5f278.0231bc",
        "type": "inject",
        "z": "7d7b30a8.5bc2b",
        "name": "pressme",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 204,
        "y": 200,
        "wires": [
            [
                "740a99d2.b07d1"
            ]
        ]
    },
    {
        "id": "41b167bc.bbffc",
        "type": "rpi-gpio out",
        "z": "7d7b30a8.5bc2b",
        "name": "Simple LED",
        "pin": "11",
        "set": false,
        "level": "0",
        "freq": "1000",
        "out": "pwm",
        "x": 570,
        "y": 360,
        "wires": []
    },
    {
        "id": "cc1b11b1.bebb28",
        "type": "function",
        "z": "7d7b30a8.5bc2b",
        "name": "stopBlink",
        "func": "clearInterval(global.get(\"blinker\"));\n\nmsg.payload = 0;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 260,
        "wires": [
            [
                "41b167bc.bbffc"
            ]
        ]
    },
    {
        "id": "5db82a6c.1b547c",
        "type": "inject",
        "z": "7d7b30a8.5bc2b",
        "name": "pressme",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 195,
        "y": 261,
        "wires": [
            [
                "cc1b11b1.bebb28"
            ]
        ]
    },
    {
        "id": "684e2449.974414",
        "type": "rpi-gpio in",
        "z": "7d7b30a8.5bc2b",
        "name": "PIR sensor",
        "pin": "36",
        "intype": "tri",
        "debounce": "25",
        "read": true,
        "x": 180,
        "y": 540,
        "wires": [
            [
                "f60b971f.d72818",
                "41b167bc.bbffc",
                "b12eb4c7.8746d",
                "edf9809c.5c166",
                "20d35e60.b0f65a"
            ]
        ]
    },
    {
        "id": "38a9dec0.2999f2",
        "type": "comment",
        "z": "7d7b30a8.5bc2b",
        "name": "LED control",
        "info": "",
        "x": 190,
        "y": 140,
        "wires": []
    },
    {
        "id": "f60b971f.d72818",
        "type": "debug",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 490,
        "y": 580,
        "wires": []
    },
    {
        "id": "c176f953.9e71b8",
        "type": "inject",
        "z": "7d7b30a8.5bc2b",
        "name": "on",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 190,
        "y": 340,
        "wires": [
            [
                "41b167bc.bbffc"
            ]
        ]
    },
    {
        "id": "97f7256a.4ea5e8",
        "type": "inject",
        "z": "7d7b30a8.5bc2b",
        "name": "off",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 190,
        "y": 380,
        "wires": [
            [
                "41b167bc.bbffc"
            ]
        ]
    },
    {
        "id": "82428d88.c2784",
        "type": "comment",
        "z": "7d7b30a8.5bc2b",
        "name": "PIR check",
        "info": "",
        "x": 180,
        "y": 460,
        "wires": []
    },
    {
        "id": "30e73299.7e539e",
        "type": "function",
        "z": "7d7b30a8.5bc2b",
        "name": "Invert and split",
        "func": "\nreturn [\n    //need to invert for LED (maybe not here)\n    {payload:255 - msg.payload.r},\n    {payload:255 - msg.payload.g},\n    {payload:255 - msg.payload.b}\n];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 820,
        "wires": [
            [
                "b06ef87a.2ecd18"
            ],
            [
                "3532ded.ea45f22"
            ],
            [
                "813aa6c7.4faa58"
            ]
        ]
    },
    {
        "id": "813aa6c7.4faa58",
        "type": "range",
        "z": "7d7b30a8.5bc2b",
        "minin": "0",
        "maxin": "255",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": true,
        "property": "payload",
        "name": "B",
        "x": 610,
        "y": 860,
        "wires": [
            [
                "3a344f73.a341b",
                "843e8dab.baebc"
            ]
        ]
    },
    {
        "id": "3532ded.ea45f22",
        "type": "range",
        "z": "7d7b30a8.5bc2b",
        "minin": "0",
        "maxin": "255",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": true,
        "property": "payload",
        "name": "G",
        "x": 610,
        "y": 820,
        "wires": [
            [
                "3bfc15b3.af5d12",
                "96ad2af9.ebb138"
            ]
        ]
    },
    {
        "id": "b06ef87a.2ecd18",
        "type": "range",
        "z": "7d7b30a8.5bc2b",
        "minin": "0",
        "maxin": "255",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": true,
        "property": "payload",
        "name": "R",
        "x": 610,
        "y": 780,
        "wires": [
            [
                "5f036011.4248c8",
                "43b79720.9de288"
            ]
        ]
    },
    {
        "id": "843e8dab.baebc",
        "type": "debug",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 870,
        "y": 920,
        "wires": []
    },
    {
        "id": "96ad2af9.ebb138",
        "type": "debug",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1030,
        "y": 820,
        "wires": []
    },
    {
        "id": "43b79720.9de288",
        "type": "debug",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 870,
        "y": 740,
        "wires": []
    },
    {
        "id": "3bfc15b3.af5d12",
        "type": "rpi-gpio out",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "pin": "19",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "pwm",
        "x": 860,
        "y": 820,
        "wires": []
    },
    {
        "id": "5f036011.4248c8",
        "type": "rpi-gpio out",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "pin": "21",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "pwm",
        "x": 860,
        "y": 780,
        "wires": []
    },
    {
        "id": "3a344f73.a341b",
        "type": "rpi-gpio out",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "pin": "23",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "pwm",
        "x": 860,
        "y": 860,
        "wires": []
    },
    {
        "id": "dcd87b79.2108e8",
        "type": "inject",
        "z": "7d7b30a8.5bc2b",
        "name": "on",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 450,
        "y": 720,
        "wires": [
            [
                "5f036011.4248c8",
                "3bfc15b3.af5d12",
                "3a344f73.a341b"
            ]
        ]
    },
    {
        "id": "c334952d.1e9208",
        "type": "inject",
        "z": "7d7b30a8.5bc2b",
        "name": "off",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "num",
        "x": 450,
        "y": 980,
        "wires": [
            [
                "5f036011.4248c8",
                "3bfc15b3.af5d12",
                "3a344f73.a341b"
            ]
        ]
    },
    {
        "id": "70e589e9.da3a",
        "type": "comment",
        "z": "7d7b30a8.5bc2b",
        "name": "RGB control",
        "info": "",
        "x": 90,
        "y": 640,
        "wires": []
    },
    {
        "id": "1e562453.9b452c",
        "type": "function",
        "z": "7d7b30a8.5bc2b",
        "name": "adjust to rbg led",
        "func": "let local_pir = msg.payload[\"pi/36\"]\nlet net = msg.payload[\"network\"]\n\nlet red=0\nlet green=0\nlet blue=0\n\n//compute rgb values\nif (local_pir == 1) {\n  if (net == 1){\n      red = 255;\n      green = 255;\n      blue = 255;\n  }\n  else {\n      red = 255\n  }\n}\nelse if (net==1){\n    blue = 255\n}\n\n\n//return RGB values\nreturn {payload: {r: red,b: blue, g:green}}\n\n\n//return {payload: (1 - local_pir)*100};\n//invert",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 660,
        "wires": [
            [
                "30e73299.7e539e"
            ]
        ]
    },
    {
        "id": "98176dee.b10b1",
        "type": "comment",
        "z": "7d7b30a8.5bc2b",
        "name": "Test",
        "info": "",
        "x": 770,
        "y": 460,
        "wires": []
    },
    {
        "id": "664573f7.d49c24",
        "type": "tcp in",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "server": "server",
        "host": "",
        "port": "55555",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "network",
        "base64": false,
        "x": 140,
        "y": 1120,
        "wires": [
            [
                "df2da042.662a1",
                "b12eb4c7.8746d"
            ]
        ]
    },
    {
        "id": "3906c54c.da9f22",
        "type": "comment",
        "z": "7d7b30a8.5bc2b",
        "name": "Listen on port",
        "info": "",
        "x": 130,
        "y": 1040,
        "wires": []
    },
    {
        "id": "df2da042.662a1",
        "type": "debug",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 1120,
        "wires": []
    },
    {
        "id": "20d35e60.b0f65a",
        "type": "tcp out",
        "z": "7d7b30a8.5bc2b",
        "host": "add IP",
        "port": "55555",
        "beserver": "client",
        "base64": false,
        "end": false,
        "name": "",
        "x": 390,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b12eb4c7.8746d",
        "type": "join",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 290,
        "y": 660,
        "wires": [
            [
                "1e562453.9b452c",
                "79344d4c.593544"
            ]
        ]
    },
    {
        "id": "79344d4c.593544",
        "type": "debug",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 730,
        "y": 580,
        "wires": []
    },
    {
        "id": "95f32362.be46b",
        "type": "inject",
        "z": "7d7b30a8.5bc2b",
        "name": "Get IPs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 1480,
        "wires": [
            [
                "13b0ffe6.347ac"
            ]
        ]
    },
    {
        "id": "cfe97850.9c6638",
        "type": "exec",
        "z": "7d7b30a8.5bc2b",
        "command": "sudo batctl dc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 160,
        "y": 1600,
        "wires": [
            [
                "503aa18.be17e6"
            ],
            [],
            []
        ]
    },
    {
        "id": "503aa18.be17e6",
        "type": "function",
        "z": "7d7b30a8.5bc2b",
        "name": "Extract IPs from output",
        "func": "var ip_lines = msg.payload.split('\\n');\nip_lines.splice(0,3);\nip_lines.pop();\n\nvar ips= [];\nfor (i = 0; i < ip_lines.length; i++) {\n    var ip = ip_lines[i];\n    ip = ip.split('.');\n    if (ip.length != 4 ){ // sanity check\n        node.error(\"Input from batctl could not be parsed: \" + ip.join('.'));\n        continue\n    }\n    ip[0] = ip[0].replace(/\\D/g,''); // remove non digits from first element in array\n    ip[3] = ip[3].split(' ')[0]; // remove mac adress\n    ip = ip.join('.');\n    ips.push(ip);\n}\nmsg.ips = ips;\nmsg.topic = \"ip_addresses\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 1660,
        "wires": [
            [
                "1f336213.81595e"
            ]
        ]
    },
    {
        "id": "983d5af.c2a63a8",
        "type": "debug",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 150,
        "y": 1820,
        "wires": []
    },
    {
        "id": "edf9809c.5c166",
        "type": "join",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 350,
        "y": 1380,
        "wires": [
            [
                "4acef986.d22658"
            ]
        ]
    },
    {
        "id": "4acef986.d22658",
        "type": "function",
        "z": "7d7b30a8.5bc2b",
        "name": "Send to all IPs",
        "func": "let motion = msg.payload[\"pi/36\"];\nlet addresses = msg.payload[\"ip_addresses\"];\n\nfor (ip of addresses){\n    msg = {host: ip, payload: motion };\n    node.send(motion);\n}\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 1380,
        "wires": [
            [
                "d72e01c0.3db6c8"
            ]
        ]
    },
    {
        "id": "d72e01c0.3db6c8",
        "type": "tcp request",
        "z": "7d7b30a8.5bc2b",
        "server": "",
        "port": "55555",
        "out": "time",
        "splitc": "0",
        "name": "",
        "x": 700,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "13b0ffe6.347ac",
        "type": "exec",
        "z": "7d7b30a8.5bc2b",
        "command": "ping -c3 -b 169.254.255.255 && sleep 5",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Refresh batman table",
        "x": 180,
        "y": 1540,
        "wires": [
            [
                "cfe97850.9c6638"
            ],
            [],
            []
        ]
    },
    {
        "id": "1f336213.81595e",
        "type": "exec",
        "z": "7d7b30a8.5bc2b",
        "command": "ifconfig bat0 | grep -o \"inet [0-9]*\\.[0-9]*\\.[0-9]*\\.[0-9]*\" | grep -o \"[0-9]*\\.[0-9]*\\.[0-9]*\\.[0-9]*\"",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "get my own IP",
        "x": 160,
        "y": 1720,
        "wires": [
            [
                "600f1f97.226c4"
            ],
            [],
            []
        ]
    },
    {
        "id": "600f1f97.226c4",
        "type": "function",
        "z": "7d7b30a8.5bc2b",
        "name": "strip my ip from batctl output",
        "func": "var my_ip = msg.payload\nvar ip_arr = msg.ips;\n\n//Filter out newline from shell command result\nmy_ip = my_ip.replace(/(\\r\\n|\\n|\\r)/gm, \"\"); \n\nip_arr = ip_arr.filter(e => e !== my_ip);\n\nmsg.payload = ip_arr\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 1780,
        "wires": [
            [
                "983d5af.c2a63a8",
                "edf9809c.5c166"
            ]
        ]
    },
    {
        "id": "e5d9eb.0eb01618",
        "type": "ui_colour_picker",
        "z": "7d7b30a8.5bc2b",
        "name": "",
        "label": "Pick a color",
        "group": "ce52a348.41d78",
        "format": "rgb",
        "outformat": "object",
        "showSwatch": false,
        "showPicker": true,
        "showValue": false,
        "showHue": false,
        "showAlpha": false,
        "showLightness": true,
        "square": "false",
        "dynOutput": "true",
        "order": 0,
        "width": "10",
        "height": "5",
        "passthru": true,
        "topic": "",
        "x": 90,
        "y": 820,
        "wires": [
            [
                "30e73299.7e539e"
            ]
        ]
    },
    {
        "id": "a53c96c6.d61cd8",
        "type": "inject",
        "z": "f9e6941.9f5df68",
        "name": "Open music file",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "open",
        "payloadType": "str",
        "x": 420,
        "y": 80,
        "wires": [
            [
                "7a6093ad.512abc"
            ]
        ]
    },
    {
        "id": "10e903ef.9912ac",
        "type": "inject",
        "z": "f9e6941.9f5df68",
        "name": "PlayPause music file",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "playpause",
        "payloadType": "str",
        "x": 370,
        "y": 140,
        "wires": [
            [
                "7a6093ad.512abc"
            ]
        ]
    },
    {
        "id": "741833ea.8be7cc",
        "type": "function",
        "z": "f9e6941.9f5df68",
        "name": "Voldown Smoother",
        "func": "\nvar o = false;\nfor (var i=0; i<8; i++) {\n    node.send( {payload:\"volumedown\"} )\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 200,
        "wires": [
            [
                "c79ca805.386358"
            ]
        ]
    },
    {
        "id": "c79ca805.386358",
        "type": "delay",
        "z": "f9e6941.9f5df68",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "2",
        "nbRateUnits": "",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 670,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "67eb6bf0.5a1ab4",
        "type": "debug",
        "z": "f9e6941.9f5df68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "51255d49.972864",
        "type": "function",
        "z": "f9e6941.9f5df68",
        "name": "Volup Smoother",
        "func": "\nvar o = false;\nfor (var i=0; i<8; i++) {\n    node.send( {payload:\"volumeup\"} )\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 300,
        "wires": [
            [
                "c79ca805.386358"
            ]
        ]
    },
    {
        "id": "8d46558.c8915a8",
        "type": "rpi-gpio in",
        "z": "f9e6941.9f5df68",
        "name": "",
        "pin": "12",
        "intype": "tri",
        "debounce": "25",
        "read": false,
        "x": 110,
        "y": 260,
        "wires": [
            [
                "a7a0f7fb.699e68"
            ]
        ]
    },
    {
        "id": "a7a0f7fb.699e68",
        "type": "switch",
        "z": "f9e6941.9f5df68",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 280,
        "y": 260,
        "wires": [
            [
                "741833ea.8be7cc"
            ],
            [
                "51255d49.972864"
            ]
        ]
    },
    {
        "id": "7a6093ad.512abc",
        "type": "rpi-omxplayer",
        "z": "f9e6941.9f5df68",
        "name": "",
        "filename": "/home/pi/music/sinatra_boots.mp3",
        "audiooutput": "headphones",
        "blackbackground": true,
        "disablekeys": false,
        "disableosd": true,
        "disableghostbox": false,
        "subtitlepath": "",
        "loop": false,
        "x": 750,
        "y": 180,
        "wires": [
            [
                "67eb6bf0.5a1ab4"
            ]
        ]
    }
]